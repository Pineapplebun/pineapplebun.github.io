{"version":3,"sources":["App.module.css","feature-navigation/navigation-sidebar.module.css","feature-about/about-content.module.css","feature-home/home-content.module.css","feature-main/main-content.module.css","ui-profile/profile-card.tsx","feature-navigation/navigation-sidebar.tsx","feature-about/about-content.tsx","feature-home/home-content.tsx","feature-main/main-content.tsx","App.tsx","serviceWorker.js","index.tsx","ui-profile/profile-card.module.css"],"names":["module","exports","ProfileCard","className","styles","container","pictureContainer","alt","src","picture","title","logos","aria-label","href","linkedin","github","NavigationSidebar","history","useHistory","profile","list","onClick","push","AboutContent","about","INTRO","HOBBIES","PROJECTS","INITIATIVES","map","i","HomeContent","misc","RENOVATIONS","React","Component","MainContent","content","path","component","App","basename","from","to","app","sidebar","main","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0HACAA,EAAOC,QAAU,CAAC,KAAO,kBAAkB,QAAU,qBAAqB,IAAM,mB,mBCAhFD,EAAOC,QAAU,CAAC,KAAO,iCAAiC,UAAY,sCAAsC,QAAU,sC,mBCAtHD,EAAOC,QAAU,CAAC,MAAQ,+B,2HCA1BD,EAAOC,QAAU,CAAC,UAAY,gCAAgC,OAAS,6BAA6B,MAAQ,8B,mBCA5GD,EAAOC,QAAU,CAAC,QAAU,gC,qLCEfC,EAAqC,kBAChD,yBAAKC,UAAWC,IAAOC,WACrB,yBAAKF,UAAWC,IAAOE,kBACrB,yBAAKC,IAAI,UAAUC,IAAI,kBAAkBL,UAAWC,IAAOK,WAE7D,wBAAIN,UAAWC,IAAOM,OAAtB,cACA,oDACA,0BAAMP,UAAWC,IAAOO,OACtB,uBACEC,aAAW,mBACXC,KAAK,qDAEL,yBACEN,IAAI,cACJC,IAAI,gBACJL,UAAWC,IAAOU,YAGtB,uBAAGF,aAAW,iBAAiBC,KAAK,mCAClC,yBACEN,IAAI,YACJC,IAAI,6BACJL,UAAWC,IAAOW,a,iBCpBb,SAASC,IACtB,IAAIC,EAAUC,cAKd,OACE,yBAAKf,UAAWC,IAAOC,WACrB,yBAAKF,UAAWC,IAAOe,SACrB,kBAAC,EAAD,OAEF,yBAAKhB,UAAWC,IAAOgB,MACrB,4BACE,wBAAIC,QAXS,kBAAMJ,EAAQK,KAAK,WAWhC,QACA,wBAAID,QAXU,kBAAMJ,EAAQK,KAAK,YAWjC,SACA,wBAAID,QAXe,kBAAMJ,EAAQK,KAAK,iBAWtC,iB,4BChBGC,EAAe,WAC1B,OACE,yBAAKpB,UAAWC,IAAOoB,OACrB,kCACA,gCACE,yBAAKjB,IAAI,iCAAiCC,IAAI,wBAC9C,kEAEF,2BACE,4CACCgB,EAAMC,MACP,6BACA,6BACA,uCACCD,EAAME,QACP,6BACA,6BACA,wCACCF,EAAMG,SACP,6BACA,6BACA,oDACA,4BACGH,EAAMI,YAAYC,KAAI,SAAAC,GAAC,OACtB,4BAAKA,U,iECxBIC,E,iLAEjB,OACE,yBAAK5B,UAAWC,IAAOC,WACrB,4BAAK2B,EAAKC,kB,GAJuBC,IAAMC,W,iBCEhC,SAASC,IACtB,OACE,yBAAKjC,UAAWC,IAAOiC,SACrB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,QAAQC,UAAWR,IAC/B,kBAAC,IAAD,CAAOO,KAAK,SAASC,UAAWhB,M,YCWzBiB,MAhBf,WACE,OACE,kBAAC,IAAD,CAAYC,SAAS,KACnB,kBAAC,IAAD,CAAUC,KAAK,IAAIC,GAAG,UACtB,yBAAKxC,UAAWC,IAAOwC,KACrB,yBAAKzC,UAAWC,IAAOyC,SACrB,kBAAC7B,EAAD,OAEF,yBAAKb,UAAWC,IAAO0C,MACrB,kBAACV,EAAD,UCHUW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,kBElInB7D,EAAOC,QAAU,CAAC,QAAU,8BAA8B,UAAY,gCAAgC,MAAQ,4BAA4B,SAAW,+BAA+B,OAAS,6BAA6B,MAAQ,8B","file":"static/js/main.72cf8a2e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"App_main__3ZkGI\",\"sidebar\":\"App_sidebar__1l9Om\",\"app\":\"App_app__1kX79\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"navigation-sidebar_list__m0luH\",\"container\":\"navigation-sidebar_container__2zHfk\",\"profile\":\"navigation-sidebar_profile__3hkVZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"about\":\"about-content_about__2bUbV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"home-content_container__1Eyqb\",\"search\":\"home-content_search__1-xUT\",\"posts\":\"home-content_posts__165UP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"main-content_content__33BN8\"};","import React, { FunctionComponent } from \"react\";\nimport styles from \"./profile-card.module.css\";\n\nexport const ProfileCard: FunctionComponent<{}> = () => (\n  <div className={styles.container}>\n    <div className={styles.pictureContainer}>\n      <img alt=\"My Face\" src=\"profile-pic.jpg\" className={styles.picture}></img>\n    </div>\n    <h1 className={styles.title}>Kevin Chen</h1>\n    <span>Software Developer</span>\n    <span className={styles.logos}>\n      <a\n        aria-label=\"My LinkedIn Page\"\n        href=\"https://www.linkedin.com/in/kevin-chen-943850121/\"\n      >\n        <img\n          alt=\"My LinkedIn\"\n          src=\"LI-In-Bug.png\"\n          className={styles.linkedin}\n        ></img>\n      </a>\n      <a aria-label=\"My Github Page\" href=\"https://github.com/Pineapplebun\">\n        <img\n          alt=\"My Github\"\n          src=\"GitHub-Mark-Light-64px.png\"\n          className={styles.github}\n        ></img>\n      </a>\n    </span>\n  </div>\n);\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { ProfileCard } from \"../ui-profile/profile-card\";\nimport styles from \"./navigation-sidebar.module.css\";\n\nexport default function NavigationSidebar() {\n  let history = useHistory();\n  const navigateHome = () => history.push(\"/home\");\n  const navigateAbout = () => history.push(\"/about\");\n  const navigateDiagrammar = () => history.push(\"/diagrammar\");\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.profile}>\n        <ProfileCard></ProfileCard>\n      </div>\n      <div className={styles.list}>\n        <ul>\n          <li onClick={navigateHome}>Home</li>\n          <li onClick={navigateAbout}>About</li>\n          <li onClick={navigateDiagrammar}>Diagrammar</li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport about from \"../data/about.json\";\nimport styles from \"./about-content.module.css\";\n\nexport const AboutContent = () => {\n  return (\n    <div className={styles.about}>\n      <h1>ME</h1>\n      <figure>\n        <img alt=\"Me on Mt.Fuji above the clouds\" src=\"me_above_mtfuji.jpg\"></img>\n        <figcaption>&#9968;Mt. Fuji 2017&#9968;</figcaption>\n      </figure>\n      <p>\n        <h2>INTRODUCTION</h2>\n        {about.INTRO}\n        <br />\n        <br />\n        <h2>HOBBIES</h2>\n        {about.HOBBIES}\n        <br />\n        <br />\n        <h2>PROJECTS</h2>\n        {about.PROJECTS}\n        <br />\n        <br />\n        <h2>LEARNING INITIATIVES</h2>\n        <ul>\n          {about.INITIATIVES.map(i => (\n            <li>{i}</li>\n          ))}\n        </ul>\n      </p>\n    </div>\n  );\n};\n","import React from \"react\";\nimport misc from \"../data/misc.json\";\nimport styles from \"./home-content.module.css\";\n\nexport default class HomeContent extends React.Component {\n  render() {\n    return (\n      <div className={styles.container}>\n        <h1>{misc.RENOVATIONS}</h1>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { AboutContent } from \"../feature-about/about-content\";\nimport HomeContent from \"../feature-home/home-content\";\nimport styles from \"./main-content.module.css\";\n\nexport default function MainContent() {\n  return (\n    <div className={styles.content}>\n      <Switch>\n        <Route path=\"/home\" component={HomeContent}></Route>\n        <Route path=\"/about\" component={AboutContent}></Route>\n      </Switch>\n    </div>\n  );\n}\n","import React from \"react\";\nimport styles from \"./App.module.css\";\nimport NavigationSidebar from \"./feature-navigation/navigation-sidebar\";\nimport MainContent from \"./feature-main/main-content\";\nimport { HashRouter, Redirect } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <HashRouter basename=\"/\">\n      <Redirect from=\"/\" to=\"/home\" />\n      <div className={styles.app}>\n        <div className={styles.sidebar}>\n          <NavigationSidebar></NavigationSidebar>\n        </div>\n        <div className={styles.main}>\n          <MainContent></MainContent>\n        </div>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"picture\":\"profile-card_picture__3Na_w\",\"container\":\"profile-card_container__3s39c\",\"logos\":\"profile-card_logos__1kHg4\",\"linkedin\":\"profile-card_linkedin__2BO_L\",\"github\":\"profile-card_github__2TGhS\",\"title\":\"profile-card_title__Eqlhf\"};"],"sourceRoot":""}